(set-logic QF_SLRDI)
(declare-fun emptybag () BagInt)(declare-fun M0 () BagInt)
(declare-fun M1 () BagInt)
(declare-fun M2 () BagInt)
(declare-fun M3 () BagInt)
(declare-fun M4 () BagInt)
(declare-fun M5 () BagInt)
(declare-fun M6 () BagInt)
(declare-fun M7 () BagInt)
(declare-fun M8 () BagInt)
(declare-fun M9 () BagInt)
(declare-fun M10 () BagInt)
(declare-fun M11 () BagInt)
(declare-fun H1 () Int)
(declare-fun H2 () Int)
(declare-fun H3 () Int)
(declare-fun H4 () Int)
(declare-fun H5 () Int)
(declare-fun H6 () Int)
(declare-fun H7 () Int)
(declare-fun H8 () Int)
(declare-fun H9 () Int)
(declare-fun H10 () Int)
(declare-fun H11 () Int)
(declare-fun H12 () Int)
(declare-fun h () Int)
(declare-fun d1 () Int)
(declare-fun d2 () Int)
(declare-fun d3 () Int)
(declare-fun d4 () Int)
(declare-fun d5 () Int)
(declare-fun d6 () Int)
(declare-fun b1 () Int)
(declare-fun b2 () Int)
(declare-fun b3 () Int)
(declare-fun b4 () Int)
(declare-fun b5 () Int)
(declare-fun b6 () Int)
(declare-fun b7 () Int)
(declare-fun b8 () Int)
(declare-fun b9 () Int)
(declare-fun key () Int)
(declare-fun ?M2_51 () BagInt)
(declare-fun ?H2_61 () Int)
(declare-fun ?M12 () BagInt)
(declare-fun ?M22 () BagInt)
(declare-fun ?H12 () Int)
(declare-fun ?H22 () Int)
(declare-fun ?d2 () Int)
(declare-fun ?b2 () Int)
(declare-fun ?M13 () BagInt)
(declare-fun ?M23 () BagInt)
(declare-fun ?H13 () Int)
(declare-fun ?H23 () Int)
(declare-fun ?d3 () Int)
(declare-fun ?b3 () Int)
(declare-fun ?M2_54 () BagInt)
(declare-fun ?H2_64 () Int)
(declare-fun ?M15 () BagInt)
(declare-fun ?M25 () BagInt)
(declare-fun ?H15 () Int)
(declare-fun ?H25 () Int)
(declare-fun ?d5 () Int)
(declare-fun ?b5 () Int)
(declare-fun ?M16 () BagInt)
(declare-fun ?M26 () BagInt)
(declare-fun ?H16 () Int)
(declare-fun ?H26 () Int)
(declare-fun ?d6 () Int)
(declare-fun ?b6 () Int)
(declare-fun ?M14 () BagInt)
(declare-fun ?M24 () BagInt)
(declare-fun ?H14 () Int)
(declare-fun ?H24 () Int)
(declare-fun ?d4 () Int)
(declare-fun ?b4 () Int)
(assert (and 
 	(= M4 (bagunion (bag d4 ) M9 M10 ) )
 	(< M9 (bag d4 ) )
 	(< (bag d4 ) M10 )
 	(<> b4 0 )
 	(= M7 (bagunion (bag d3 ) (bag key ) ) )
 	(< M4 (bag d2 ) )
 	(< (bag d2 ) M5 )
 	(= M2 (bagunion (bag d1 ) (bag d2 ) M4 M5 M3 ) )
 	(< (bagunion (bag d2 ) M4 M5 ) (bag d1 ) )
 	(< (bag d1 ) M3 )
 	(= b1 (- H3 (+ H10 2 ) ) )
 	(<= (- 0 1 ) b1 )
 	(<= b1 1 )
 	(= M1 (bagunion M0 (bag key ) ) )
 	(= M0 (bagminus M0 (bag key ) ) )
 	(> d1 key )
 	(> d2 key )
 	(> d3 key )
 	(= b5 0 )
 	(= b6 0 )
 	(= H12 2 )
 	(= b8 (- 0 1 ) )
 	(= b9 0 )
 	(= H11 (+ H10 1 ) )
 )
 ) 
 (assert (not 
(and 
 	(= ?M16 emptybag )
 	(= ?H16 0 )
 	(= ?M26 emptybag )
 	(= ?H26 0 )
 	(= ?M15 (bagunion (bag key ) ?M16 ?M26 ) )
 	(< ?M16 (bag key ) )
 	(< (bag key ) ?M26 )
 	(= ?H15 (ite (> ?H26 ?H16 ) (+ ?H26 1 ) (+ ?H16 1 ) ) )
 	(= b9 (- ?H26 ?H16 ) )
 	(<= (- 0 1 ) b9 )
 	(<= b9 1 )
 	(= ?M25 emptybag )
 	(= ?H25 0 )
 	(= M7 (bagunion (bag d3 ) ?M15 ?M25 ) )
 	(< ?M15 (bag d3 ) )
 	(< (bag d3 ) ?M25 )
 	(= H12 (ite (> ?H25 ?H15 ) (+ ?H25 1 ) (+ ?H15 1 ) ) )
 	(= b8 (- ?H25 ?H15 ) )
 	(<= (- 0 1 ) b8 )
 	(<= b8 1 )
 	(= ?M23 (bagunion (bag d2 ) M10 M5 ) )
 	(< M10 (bag d2 ) )
 	(< (bag d2 ) M5 )
 	(= ?H23 (ite (> H10 H10 ) (+ H10 1 ) (+ H10 1 ) ) )
 	(= b5 (- H10 H10 ) )
 	(<= (- 0 1 ) b5 )
 	(<= b5 1 )
 	(= ?M12 (bagunion (bag d4 ) M9 ?M23 ) )
 	(< M9 (bag d4 ) )
 	(< (bag d4 ) ?M23 )
 	(= ?H12 (ite (> ?H23 H11 ) (+ ?H23 1 ) (+ H11 1 ) ) )
 	(= b6 (- ?H23 H11 ) )
 	(<= (- 0 1 ) b6 )
 	(<= b6 1 )
 	(= M2 (bagunion (bag d1 ) ?M12 M3 ) )
 	(< ?M12 (bag d1 ) )
 	(< (bag d1 ) M3 )
 	(= H2 (ite (> H3 ?H12 ) (+ H3 1 ) (+ ?H12 1 ) ) )
 	(= b1 (- H3 ?H12 ) )
 	(<= (- 0 1 ) b1 )
 	(<= b1 1 )
 	(= M1 (bagunion M0 (bag key ) ) )
 	(= M0 (bagminus M0 (bag key ) ) )
 )
 ) 
)
(check-sat)
