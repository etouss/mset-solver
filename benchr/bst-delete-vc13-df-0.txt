(set-logic QF_SLRDI)
(declare-fun emptybag () BagInt)(declare-fun M0 () BagInt)
(declare-fun M1 () BagInt)
(declare-fun M2 () BagInt)
(declare-fun M3 () BagInt)
(declare-fun M4 () BagInt)
(declare-fun M5 () BagInt)
(declare-fun M6 () BagInt)
(declare-fun M7 () BagInt)
(declare-fun M8 () BagInt)
(declare-fun M9 () BagInt)
(declare-fun key () Int)
(declare-fun d1 () Int)
(declare-fun d2 () Int)
(declare-fun d3 () Int)
(assert (and 
 	(= M8 emptybag )
 	(= M7 (bagunion (bag d3 ) M8 M9 ) )
 	(< M8 (bag d3 ) )
 	(< (bag d3 ) M9 )
 	(= M4 (bagunion (bag d2 ) M6 M7 ) )
 	(< M6 (bag d2 ) )
 	(< (bag d2 ) M7 )
 	(= M1 (bagminus M0 (bag key ) ) )
 	(= M2 (bagminus (bagunion (bag d1 ) M3 M4 ) (bag key ) ) )
 	(< M3 (bag d1 ) )
 	(< (bag d1 ) M4 )
 	(< d1 key )
 	(=> (subset (bag key ) M0 )(subset (bag key ) M4 ))
 	(=> (subset (bag key ) M4 )(subset (bag key ) M0 ))
 	(= M5 (bagunion (bag d3 ) M6 M9 ) )
 	(= key d2 )
 )
 ) 
 (assert (not 
(and 
 	(= M1 (bagminus M0 (bag key ) ) )
 	(= M5 (bagminus M4 (bag key ) ) )
 	(= M2 (bagunion (bag d1 ) M3 M5 ) )
 	(< M3 (bag d1 ) )
 	(< (bag d1 ) M5 )
 	(< d1 key )
 	(subset (bag key ) M4 )
 	(subset (bag key ) M0 )
 )
 ) 
)
(check-sat)
