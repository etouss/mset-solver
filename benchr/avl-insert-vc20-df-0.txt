(set-logic QF_SLRDI)
(declare-fun emptybag () BagInt)(declare-fun M0 () BagInt)
(declare-fun M1 () BagInt)
(declare-fun M2 () BagInt)
(declare-fun M3 () BagInt)
(declare-fun M4 () BagInt)
(declare-fun M5 () BagInt)
(declare-fun M6 () BagInt)
(declare-fun M7 () BagInt)
(declare-fun M8 () BagInt)
(declare-fun M9 () BagInt)
(declare-fun M10 () BagInt)
(declare-fun M11 () BagInt)
(declare-fun H1 () Int)
(declare-fun H2 () Int)
(declare-fun H3 () Int)
(declare-fun H4 () Int)
(declare-fun H5 () Int)
(declare-fun H6 () Int)
(declare-fun H7 () Int)
(declare-fun H8 () Int)
(declare-fun H9 () Int)
(declare-fun H10 () Int)
(declare-fun H11 () Int)
(declare-fun H12 () Int)
(declare-fun h () Int)
(declare-fun d1 () Int)
(declare-fun d2 () Int)
(declare-fun d3 () Int)
(declare-fun d4 () Int)
(declare-fun d5 () Int)
(declare-fun d6 () Int)
(declare-fun b1 () Int)
(declare-fun b2 () Int)
(declare-fun b3 () Int)
(declare-fun b4 () Int)
(declare-fun b5 () Int)
(declare-fun b6 () Int)
(declare-fun b7 () Int)
(declare-fun b8 () Int)
(declare-fun b9 () Int)
(declare-fun key () Int)
(declare-fun ?M11 () BagInt)
(declare-fun ?M21 () BagInt)
(declare-fun ?H11 () Int)
(declare-fun ?H21 () Int)
(declare-fun ?d1 () Int)
(declare-fun ?b1 () Int)
(declare-fun ?M2_52 () BagInt)
(declare-fun ?H2_62 () Int)
(declare-fun ?M13 () BagInt)
(declare-fun ?M23 () BagInt)
(declare-fun ?H13 () Int)
(declare-fun ?H23 () Int)
(declare-fun ?d3 () Int)
(declare-fun ?b3 () Int)
(declare-fun ?M14 () BagInt)
(declare-fun ?M24 () BagInt)
(declare-fun ?H14 () Int)
(declare-fun ?H24 () Int)
(declare-fun ?d4 () Int)
(declare-fun ?b4 () Int)
(declare-fun ?M12 () BagInt)
(declare-fun ?M22 () BagInt)
(declare-fun ?H12 () Int)
(declare-fun ?H22 () Int)
(declare-fun ?d2 () Int)
(declare-fun ?b2 () Int)
(assert (and 
 	(= M1 (bagunion (bag d3 ) M8 M9 ) )
 	(< M8 (bag d3 ) )
 	(< (bag d3 ) M9 )
 	(= H1 (ite (> H9 H8 ) (+ H9 1 ) (+ H8 1 ) ) )
 	(= b3 (- H9 H8 ) )
 	(= b3 (- 0 1 ) )
 	(= M3 (bagunion (bag d2 ) (bag key ) ) )
 	(= H4 1 )
 	(= H6 2 )
 	(= M0 (bagminus (bagunion (bag d1 ) M1 M4 ) (bag key ) ) )
 	(< M1 (bag d1 ) )
 	(< (bag d1 ) M4 )
 	(= b1 (- H5 H1 ) )
 	(= b1 (- 0 2 ) )
 	(= M0 (bagminus M0 (bag key ) ) )
 	(> d1 key )
 	(> d2 key )
 	(= b2 (- 0 1 ) )
 	(= M7 (bagunion (bag d3 ) M8 (bag d1 ) M9 M4 ) )
 	(= H7 (+ H8 1 ) )
 	(= b4 0 )
 	(= b5 0 )
 	(= b6 0 )
 )
 ) 
 (assert (not 
(and 
 	(= ?M14 emptybag )
 	(= ?H14 0 )
 	(= ?M24 emptybag )
 	(= ?H24 0 )
 	(= ?M13 (bagunion (bag key ) ?M14 ?M24 ) )
 	(< ?M14 (bag key ) )
 	(< (bag key ) ?M24 )
 	(= ?H13 (ite (> ?H24 ?H14 ) (+ ?H24 1 ) (+ ?H14 1 ) ) )
 	(= b6 (- ?H24 ?H14 ) )
 	(<= (- 0 1 ) b6 )
 	(<= b6 1 )
 	(= ?M23 emptybag )
 	(= ?H23 0 )
 	(= M3 (bagunion (bag d2 ) ?M13 ?M23 ) )
 	(< ?M13 (bag d2 ) )
 	(< (bag d2 ) ?M23 )
 	(= H6 (ite (> ?H23 ?H13 ) (+ ?H23 1 ) (+ ?H13 1 ) ) )
 	(= b2 (- ?H23 ?H13 ) )
 	(<= (- 0 1 ) b2 )
 	(<= b2 1 )
 	(= ?M21 (bagunion (bag d1 ) M9 M4 ) )
 	(< M9 (bag d1 ) )
 	(< (bag d1 ) M4 )
 	(= ?H21 (ite (> H5 H9 ) (+ H5 1 ) (+ H9 1 ) ) )
 	(= b4 (- H5 H9 ) )
 	(<= (- 0 1 ) b4 )
 	(<= b4 1 )
 	(= M7 (bagunion (bag d3 ) M8 ?M21 ) )
 	(< M8 (bag d3 ) )
 	(< (bag d3 ) ?M21 )
 	(= H7 (ite (> ?H21 H8 ) (+ ?H21 1 ) (+ H8 1 ) ) )
 	(= b5 (- ?H21 H8 ) )
 	(<= (- 0 1 ) b5 )
 	(<= b5 1 )
 	(= M7 (bagunion M0 (bag key ) ) )
 	(= M0 (bagminus M0 (bag key ) ) )
 )
 ) 
)
(check-sat)
