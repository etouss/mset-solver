(set-logic QF_UFLIA)
(define-fun max ((x Int) (y Int)) Int (ite (< x y) y x))
(define-fun min ((x Int) (y Int)) Int (ite (> x y) y x))

(declare-fun M0 (Int) Int)
(declare-fun M1 (Int) Int)
(declare-fun M3 (Int) Int)
(declare-fun key () Int)
(declare-fun BAGkey (Int) Int)
(declare-fun bagmaxM3 () Int)
(declare-fun bagminM0 () Int)
(declare-fun M0MINUSBAGkeyMINUSneqM1 () Int)


(assert (and
	(and
		(= (M1 key ) (max (- (M0 key ) (BAGkey key ) ) 0 ) )
		(= (M1 bagmaxM3 ) (max (- (M0 bagmaxM3 ) (BAGkey bagmaxM3 ) ) 0 ) )
		(= (M1 bagminM0 ) (max (- (M0 bagminM0 ) (BAGkey bagminM0 ) ) 0 ) )
		(= (M1 M0MINUSBAGkeyMINUSneqM1 ) (max (- (M0 M0MINUSBAGkeyMINUSneqM1 ) (BAGkey M0MINUSBAGkeyMINUSneqM1 ) ) 0 ) )
	)
	(< bagmaxM3 key )
	(< key bagminM0 )
))
(assert (or
 	(distinct (M1 nil ) ((bagminus M0 BAGkey ) nil ) )
	(= (M0 key ) 0 )
))
(assert (and
	(= (BAGkey key ) 1 )
	(=>
		(distinct key bagmaxM3 )
		(= (BAGkey bagmaxM3 ) 0 ))
	(=>
		(distinct key bagminM0 )
		(= (BAGkey bagminM0 ) 0 ))
	(=>
		(distinct key M0MINUSBAGkeyMINUSneqM1 )
		(= (BAGkey M0MINUSBAGkeyMINUSneqM1 ) 0 ))
))
(assert (and
	(>= (M3 bagmaxM3 ) 1 )
	(=>
		(> key bagmaxM3 )
		(= (M3 key ) 0 ))
	(=>
		(> bagminM0 bagmaxM3 )
		(= (M3 bagminM0 ) 0 ))
	(=>
		(> M0MINUSBAGkeyMINUSneqM1 bagmaxM3 )
		(= (M3 M0MINUSBAGkeyMINUSneqM1 ) 0 ))
))
(assert (and
	(>= (M0 bagminM0 ) 1 )
	(=>
		(< key bagminM0 )
		(= (M0 key ) 0 ))
	(=>
		(< bagmaxM3 bagminM0 )
		(= (M0 bagmaxM3 ) 0 ))
	(=>
		(< M0MINUSBAGkeyMINUSneqM1 bagminM0 )
		(= (M0 M0MINUSBAGkeyMINUSneqM1 ) 0 ))
))
(assert (and 

(>= (M0 key ) 0 )

(>= (M1 key ) 0 )

(>= (M3 key ) 0 )

(>= (BAGkey key ) 0 )

(>= (M0 bagmaxM3 ) 0 )

(>= (M1 bagmaxM3 ) 0 )

(>= (M3 bagmaxM3 ) 0 )

(>= (BAGkey bagmaxM3 ) 0 )

(>= (M0 bagminM0 ) 0 )

(>= (M1 bagminM0 ) 0 )

(>= (M3 bagminM0 ) 0 )

(>= (BAGkey bagminM0 ) 0 )

(>= (M0 M0MINUSBAGkeyMINUSneqM1 ) 0 )

(>= (M1 M0MINUSBAGkeyMINUSneqM1 ) 0 )

(>= (M3 M0MINUSBAGkeyMINUSneqM1 ) 0 )

(>= (BAGkey M0MINUSBAGkeyMINUSneqM1 ) 0 )

))
(check-sat)