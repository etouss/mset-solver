(set-logic QF_UFLIA)
(define-fun max ((x Int) (y Int)) Int (ite (< x y) y x))
(define-fun min ((x Int) (y Int)) Int (ite (> x y) y x))

(declare-fun M0 (Int) Int)
(declare-fun M1 (Int) Int)
(declare-fun M2 (Int) Int)
(declare-fun M3 (Int) Int)
(declare-fun M4 (Int) Int)
(declare-fun key () Int)
(declare-fun d () Int)
(declare-fun d2 () Int)
(declare-fun BAGd2 (Int) Int)
(declare-fun bagminM4 () Int)
(declare-fun bagminM3 () Int)
(declare-fun BAGd (Int) Int)
(declare-fun BAGkey (Int) Int)
(declare-fun BAGdUNIONM4UNIONneqM2 () Int)
(declare-fun bagmaxM4 () Int)
(declare-fun M0MINUSBAGkeyMINUSneqM1 () Int)


(assert (and
	(and
		(= (M3 key ) (max (BAGd2 key ) (M4 key ) ) )
		(= (M3 d ) (max (BAGd2 d ) (M4 d ) ) )
		(= (M3 d2 ) (max (BAGd2 d2 ) (M4 d2 ) ) )
		(= (M3 bagminM4 ) (max (BAGd2 bagminM4 ) (M4 bagminM4 ) ) )
		(= (M3 bagminM3 ) (max (BAGd2 bagminM3 ) (M4 bagminM3 ) ) )
		(= (M3 BAGdUNIONM4UNIONneqM2 ) (max (BAGd2 BAGdUNIONM4UNIONneqM2 ) (M4 BAGdUNIONM4UNIONneqM2 ) ) )
		(= (M3 bagmaxM4 ) (max (BAGd2 bagmaxM4 ) (M4 bagmaxM4 ) ) )
		(= (M3 M0MINUSBAGkeyMINUSneqM1 ) (max (BAGd2 M0MINUSBAGkeyMINUSneqM1 ) (M4 M0MINUSBAGkeyMINUSneqM1 ) ) )
	)
	(<= d2 bagminM4 )
	(<= d bagminM3 )
	(or
 		(= (M0 key ) 0 )
		(>= (M3 key ) 1 )
	)
	(or
 		(= (M3 key ) 0 )
		(>= (M0 key ) 1 )
	)
	(and
		(= (M2 key ) (max (- ((bagunion M3 BAGd ) key ) (BAGkey key ) ) 0 ) )
		(= (M2 d ) (max (- ((bagunion M3 BAGd ) d ) (BAGkey d ) ) 0 ) )
		(= (M2 d2 ) (max (- ((bagunion M3 BAGd ) d2 ) (BAGkey d2 ) ) 0 ) )
		(= (M2 bagminM4 ) (max (- ((bagunion M3 BAGd ) bagminM4 ) (BAGkey bagminM4 ) ) 0 ) )
		(= (M2 bagminM3 ) (max (- ((bagunion M3 BAGd ) bagminM3 ) (BAGkey bagminM3 ) ) 0 ) )
		(= (M2 BAGdUNIONM4UNIONneqM2 ) (max (- ((bagunion M3 BAGd ) BAGdUNIONM4UNIONneqM2 ) (BAGkey BAGdUNIONM4UNIONneqM2 ) ) 0 ) )
		(= (M2 bagmaxM4 ) (max (- ((bagunion M3 BAGd ) bagmaxM4 ) (BAGkey bagmaxM4 ) ) 0 ) )
		(= (M2 M0MINUSBAGkeyMINUSneqM1 ) (max (- ((bagunion M3 BAGd ) M0MINUSBAGkeyMINUSneqM1 ) (BAGkey M0MINUSBAGkeyMINUSneqM1 ) ) 0 ) )
	)
	(and
		(= (M1 key ) (max (- (M0 key ) (BAGkey key ) ) 0 ) )
		(= (M1 d ) (max (- (M0 d ) (BAGkey d ) ) 0 ) )
		(= (M1 d2 ) (max (- (M0 d2 ) (BAGkey d2 ) ) 0 ) )
		(= (M1 bagminM4 ) (max (- (M0 bagminM4 ) (BAGkey bagminM4 ) ) 0 ) )
		(= (M1 bagminM3 ) (max (- (M0 bagminM3 ) (BAGkey bagminM3 ) ) 0 ) )
		(= (M1 BAGdUNIONM4UNIONneqM2 ) (max (- (M0 BAGdUNIONM4UNIONneqM2 ) (BAGkey BAGdUNIONM4UNIONneqM2 ) ) 0 ) )
		(= (M1 bagmaxM4 ) (max (- (M0 bagmaxM4 ) (BAGkey bagmaxM4 ) ) 0 ) )
		(= (M1 M0MINUSBAGkeyMINUSneqM1 ) (max (- (M0 M0MINUSBAGkeyMINUSneqM1 ) (BAGkey M0MINUSBAGkeyMINUSneqM1 ) ) 0 ) )
	)
	(= key d2 )
))
(assert (or
 	(distinct (M2 nil ) ((bagunion BAGd M4 ) nil ) )
	(> d bagmaxM4 )
	(= (M0 key ) 0 )
	(distinct (M1 nil ) ((bagminus M0 BAGkey ) nil ) )
))
(assert (and
	(= (BAGd2 d2 ) 1 )
	(=>
		(distinct d2 key )
		(= (BAGd2 key ) 0 ))
	(=>
		(distinct d2 d )
		(= (BAGd2 d ) 0 ))
	(=>
		(distinct d2 bagminM4 )
		(= (BAGd2 bagminM4 ) 0 ))
	(=>
		(distinct d2 bagminM3 )
		(= (BAGd2 bagminM3 ) 0 ))
	(=>
		(distinct d2 BAGdUNIONM4UNIONneqM2 )
		(= (BAGd2 BAGdUNIONM4UNIONneqM2 ) 0 ))
	(=>
		(distinct d2 bagmaxM4 )
		(= (BAGd2 bagmaxM4 ) 0 ))
	(=>
		(distinct d2 M0MINUSBAGkeyMINUSneqM1 )
		(= (BAGd2 M0MINUSBAGkeyMINUSneqM1 ) 0 ))
))
(assert (and
	(>= (M4 bagminM4 ) 1 )
	(=>
		(< key bagminM4 )
		(= (M4 key ) 0 ))
	(=>
		(< d bagminM4 )
		(= (M4 d ) 0 ))
	(=>
		(< d2 bagminM4 )
		(= (M4 d2 ) 0 ))
	(=>
		(< bagminM3 bagminM4 )
		(= (M4 bagminM3 ) 0 ))
	(=>
		(< BAGdUNIONM4UNIONneqM2 bagminM4 )
		(= (M4 BAGdUNIONM4UNIONneqM2 ) 0 ))
	(=>
		(< bagmaxM4 bagminM4 )
		(= (M4 bagmaxM4 ) 0 ))
	(=>
		(< M0MINUSBAGkeyMINUSneqM1 bagminM4 )
		(= (M4 M0MINUSBAGkeyMINUSneqM1 ) 0 ))
))
(assert (and
	(>= (M3 bagminM3 ) 1 )
	(=>
		(< key bagminM3 )
		(= (M3 key ) 0 ))
	(=>
		(< d bagminM3 )
		(= (M3 d ) 0 ))
	(=>
		(< d2 bagminM3 )
		(= (M3 d2 ) 0 ))
	(=>
		(< bagminM4 bagminM3 )
		(= (M3 bagminM4 ) 0 ))
	(=>
		(< BAGdUNIONM4UNIONneqM2 bagminM3 )
		(= (M3 BAGdUNIONM4UNIONneqM2 ) 0 ))
	(=>
		(< bagmaxM4 bagminM3 )
		(= (M3 bagmaxM4 ) 0 ))
	(=>
		(< M0MINUSBAGkeyMINUSneqM1 bagminM3 )
		(= (M3 M0MINUSBAGkeyMINUSneqM1 ) 0 ))
))
(assert (and
	(= (BAGd d ) 1 )
	(=>
		(distinct d key )
		(= (BAGd key ) 0 ))
	(=>
		(distinct d d2 )
		(= (BAGd d2 ) 0 ))
	(=>
		(distinct d bagminM4 )
		(= (BAGd bagminM4 ) 0 ))
	(=>
		(distinct d bagminM3 )
		(= (BAGd bagminM3 ) 0 ))
	(=>
		(distinct d BAGdUNIONM4UNIONneqM2 )
		(= (BAGd BAGdUNIONM4UNIONneqM2 ) 0 ))
	(=>
		(distinct d bagmaxM4 )
		(= (BAGd bagmaxM4 ) 0 ))
	(=>
		(distinct d M0MINUSBAGkeyMINUSneqM1 )
		(= (BAGd M0MINUSBAGkeyMINUSneqM1 ) 0 ))
))
(assert (and
	(= (BAGkey key ) 1 )
	(=>
		(distinct key d )
		(= (BAGkey d ) 0 ))
	(=>
		(distinct key d2 )
		(= (BAGkey d2 ) 0 ))
	(=>
		(distinct key bagminM4 )
		(= (BAGkey bagminM4 ) 0 ))
	(=>
		(distinct key bagminM3 )
		(= (BAGkey bagminM3 ) 0 ))
	(=>
		(distinct key BAGdUNIONM4UNIONneqM2 )
		(= (BAGkey BAGdUNIONM4UNIONneqM2 ) 0 ))
	(=>
		(distinct key bagmaxM4 )
		(= (BAGkey bagmaxM4 ) 0 ))
	(=>
		(distinct key M0MINUSBAGkeyMINUSneqM1 )
		(= (BAGkey M0MINUSBAGkeyMINUSneqM1 ) 0 ))
))
(assert (and
	(>= (M4 bagmaxM4 ) 1 )
	(=>
		(> key bagmaxM4 )
		(= (M4 key ) 0 ))
	(=>
		(> d bagmaxM4 )
		(= (M4 d ) 0 ))
	(=>
		(> d2 bagmaxM4 )
		(= (M4 d2 ) 0 ))
	(=>
		(> bagminM4 bagmaxM4 )
		(= (M4 bagminM4 ) 0 ))
	(=>
		(> bagminM3 bagmaxM4 )
		(= (M4 bagminM3 ) 0 ))
	(=>
		(> BAGdUNIONM4UNIONneqM2 bagmaxM4 )
		(= (M4 BAGdUNIONM4UNIONneqM2 ) 0 ))
	(=>
		(> M0MINUSBAGkeyMINUSneqM1 bagmaxM4 )
		(= (M4 M0MINUSBAGkeyMINUSneqM1 ) 0 ))
))
(assert (and 

(>= (M0 key ) 0 )

(>= (M1 key ) 0 )

(>= (M2 key ) 0 )

(>= (M3 key ) 0 )

(>= (M4 key ) 0 )

(>= (BAGd2 key ) 0 )

(>= (BAGd key ) 0 )

(>= (BAGkey key ) 0 )

(>= (M0 d ) 0 )

(>= (M1 d ) 0 )

(>= (M2 d ) 0 )

(>= (M3 d ) 0 )

(>= (M4 d ) 0 )

(>= (BAGd2 d ) 0 )

(>= (BAGd d ) 0 )

(>= (BAGkey d ) 0 )

(>= (M0 d2 ) 0 )

(>= (M1 d2 ) 0 )

(>= (M2 d2 ) 0 )

(>= (M3 d2 ) 0 )

(>= (M4 d2 ) 0 )

(>= (BAGd2 d2 ) 0 )

(>= (BAGd d2 ) 0 )

(>= (BAGkey d2 ) 0 )

(>= (M0 bagminM4 ) 0 )

(>= (M1 bagminM4 ) 0 )

(>= (M2 bagminM4 ) 0 )

(>= (M3 bagminM4 ) 0 )

(>= (M4 bagminM4 ) 0 )

(>= (BAGd2 bagminM4 ) 0 )

(>= (BAGd bagminM4 ) 0 )

(>= (BAGkey bagminM4 ) 0 )

(>= (M0 bagminM3 ) 0 )

(>= (M1 bagminM3 ) 0 )

(>= (M2 bagminM3 ) 0 )

(>= (M3 bagminM3 ) 0 )

(>= (M4 bagminM3 ) 0 )

(>= (BAGd2 bagminM3 ) 0 )

(>= (BAGd bagminM3 ) 0 )

(>= (BAGkey bagminM3 ) 0 )

(>= (M0 BAGdUNIONM4UNIONneqM2 ) 0 )

(>= (M1 BAGdUNIONM4UNIONneqM2 ) 0 )

(>= (M2 BAGdUNIONM4UNIONneqM2 ) 0 )

(>= (M3 BAGdUNIONM4UNIONneqM2 ) 0 )

(>= (M4 BAGdUNIONM4UNIONneqM2 ) 0 )

(>= (BAGd2 BAGdUNIONM4UNIONneqM2 ) 0 )

(>= (BAGd BAGdUNIONM4UNIONneqM2 ) 0 )

(>= (BAGkey BAGdUNIONM4UNIONneqM2 ) 0 )

(>= (M0 bagmaxM4 ) 0 )

(>= (M1 bagmaxM4 ) 0 )

(>= (M2 bagmaxM4 ) 0 )

(>= (M3 bagmaxM4 ) 0 )

(>= (M4 bagmaxM4 ) 0 )

(>= (BAGd2 bagmaxM4 ) 0 )

(>= (BAGd bagmaxM4 ) 0 )

(>= (BAGkey bagmaxM4 ) 0 )

(>= (M0 M0MINUSBAGkeyMINUSneqM1 ) 0 )

(>= (M1 M0MINUSBAGkeyMINUSneqM1 ) 0 )

(>= (M2 M0MINUSBAGkeyMINUSneqM1 ) 0 )

(>= (M3 M0MINUSBAGkeyMINUSneqM1 ) 0 )

(>= (M4 M0MINUSBAGkeyMINUSneqM1 ) 0 )

(>= (BAGd2 M0MINUSBAGkeyMINUSneqM1 ) 0 )

(>= (BAGd M0MINUSBAGkeyMINUSneqM1 ) 0 )

(>= (BAGkey M0MINUSBAGkeyMINUSneqM1 ) 0 )

))
(check-sat)