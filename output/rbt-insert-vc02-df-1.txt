(set-logic QF_UFLIA)
(define-fun max ((x Int) (y Int)) Int (ite (< x y) y x))
(define-fun min ((x Int) (y Int)) Int (ite (> x y) y x))

(declare-fun emptybag (Int) Int)
(declare-fun M0 (Int) Int)
(declare-fun M1 (Int) Int)
(declare-fun M2 (Int) Int)
(declare-fun M3 (Int) Int)
(declare-fun M4 (Int) Int)
(declare-fun N2 () Int)
(declare-fun N3 () Int)
(declare-fun N4 () Int)
(declare-fun iseven () Int)
(declare-fun C1 () Int)
(declare-fun C2 () Int)
(declare-fun C3 () Int)
(declare-fun C4 () Int)
(declare-fun d1 () Int)
(declare-fun c3 () Int)
(declare-fun key () Int)
(declare-fun bagmaxM3 () Int)
(declare-fun bagminM4 () Int)
(declare-fun BAGd1 (Int) Int)
(declare-fun BAGkey (Int) Int)
(declare-fun bagmaxM4 () Int)
(declare-fun BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 () Int)
(declare-fun M0UNIONBAGkeyUNIONneqM1 () Int)
(declare-fun M0MINUSBAGkeyMINUSneqM0 () Int)


(assert (and
	(and
		(= (M3 d1 ) (emptybag d1 ) )
		(= (M3 key ) (emptybag key ) )
		(= (M3 bagmaxM3 ) (emptybag bagmaxM3 ) )
		(= (M3 bagminM4 ) (emptybag bagminM4 ) )
		(= (M3 bagmaxM4 ) (emptybag bagmaxM4 ) )
		(= (M3 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) (emptybag BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) )
		(= (M3 M0UNIONBAGkeyUNIONneqM1 ) (emptybag M0UNIONBAGkeyUNIONneqM1 ) )
		(= (M3 M0MINUSBAGkeyMINUSneqM0 ) (emptybag M0MINUSBAGkeyMINUSneqM0 ) )
	)
	(= N3 1 )
	(= C3 1 )
	(< bagmaxM3 d1 )
	(< d1 bagminM4 )
	(<= 0 C2 )
	(<= C2 1 )
	(or
 		(distinct C2 0 )
		(= C3 1 )
	)
	(or
 		(distinct C2 0 )
		(= C4 1 )
	)
	(or
 		(>= (M3 key ) 1 )
		(and
			(= (M2 d1 ) (max (BAGd1 d1 ) (max (M3 d1 ) (max (M4 d1 ) (BAGkey d1 ) ) ) ) )
			(= (M2 key ) (max (BAGd1 key ) (max (M3 key ) (max (M4 key ) (BAGkey key ) ) ) ) )
			(= (M2 bagmaxM3 ) (max (BAGd1 bagmaxM3 ) (max (M3 bagmaxM3 ) (max (M4 bagmaxM3 ) (BAGkey bagmaxM3 ) ) ) ) )
			(= (M2 bagminM4 ) (max (BAGd1 bagminM4 ) (max (M3 bagminM4 ) (max (M4 bagminM4 ) (BAGkey bagminM4 ) ) ) ) )
			(= (M2 bagmaxM4 ) (max (BAGd1 bagmaxM4 ) (max (M3 bagmaxM4 ) (max (M4 bagmaxM4 ) (BAGkey bagmaxM4 ) ) ) ) )
			(= (M2 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) (max (BAGd1 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) (max (M3 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) (max (M4 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) (BAGkey BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) ) ) ) )
			(= (M2 M0UNIONBAGkeyUNIONneqM1 ) (max (BAGd1 M0UNIONBAGkeyUNIONneqM1 ) (max (M3 M0UNIONBAGkeyUNIONneqM1 ) (max (M4 M0UNIONBAGkeyUNIONneqM1 ) (BAGkey M0UNIONBAGkeyUNIONneqM1 ) ) ) ) )
			(= (M2 M0MINUSBAGkeyMINUSneqM0 ) (max (BAGd1 M0MINUSBAGkeyMINUSneqM0 ) (max (M3 M0MINUSBAGkeyMINUSneqM0 ) (max (M4 M0MINUSBAGkeyMINUSneqM0 ) (BAGkey M0MINUSBAGkeyMINUSneqM0 ) ) ) ) )
		)
	)
	(or
 		(= C2 0 )
		(= N2 (+ N3 1 ) )
	)
	(or
 		(>= (M0 key ) 1 )
		(and
			(= (M1 d1 ) (max (M0 d1 ) (BAGkey d1 ) ) )
			(= (M1 key ) (max (M0 key ) (BAGkey key ) ) )
			(= (M1 bagmaxM3 ) (max (M0 bagmaxM3 ) (BAGkey bagmaxM3 ) ) )
			(= (M1 bagminM4 ) (max (M0 bagminM4 ) (BAGkey bagminM4 ) ) )
			(= (M1 bagmaxM4 ) (max (M0 bagmaxM4 ) (BAGkey bagmaxM4 ) ) )
			(= (M1 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) (max (M0 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) (BAGkey BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) ) )
			(= (M1 M0UNIONBAGkeyUNIONneqM1 ) (max (M0 M0UNIONBAGkeyUNIONneqM1 ) (BAGkey M0UNIONBAGkeyUNIONneqM1 ) ) )
			(= (M1 M0MINUSBAGkeyMINUSneqM0 ) (max (M0 M0MINUSBAGkeyMINUSneqM0 ) (BAGkey M0MINUSBAGkeyMINUSneqM0 ) ) )
		)
	)
	(= C1 1 )
	(or
 		(= (M0 key ) 0 )
		(>= (M3 key ) 1 )
	)
	(or
 		(= (M3 key ) 0 )
		(>= (M0 key ) 1 )
	)
	(> d1 key )
	(= iseven 1 )
	(= c3 0 )
	(= N3 N4 )
	(or
 		(= (M3 key ) 0 )
		(and
			(= (M2 d1 ) (max (BAGd1 d1 ) (max (M3 d1 ) (M4 d1 ) ) ) )
			(= (M2 key ) (max (BAGd1 key ) (max (M3 key ) (M4 key ) ) ) )
			(= (M2 bagmaxM3 ) (max (BAGd1 bagmaxM3 ) (max (M3 bagmaxM3 ) (M4 bagmaxM3 ) ) ) )
			(= (M2 bagminM4 ) (max (BAGd1 bagminM4 ) (max (M3 bagminM4 ) (M4 bagminM4 ) ) ) )
			(= (M2 bagmaxM4 ) (max (BAGd1 bagmaxM4 ) (max (M3 bagmaxM4 ) (M4 bagmaxM4 ) ) ) )
			(= (M2 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) (max (BAGd1 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) (max (M3 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) (M4 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) ) ) )
			(= (M2 M0UNIONBAGkeyUNIONneqM1 ) (max (BAGd1 M0UNIONBAGkeyUNIONneqM1 ) (max (M3 M0UNIONBAGkeyUNIONneqM1 ) (M4 M0UNIONBAGkeyUNIONneqM1 ) ) ) )
			(= (M2 M0MINUSBAGkeyMINUSneqM0 ) (max (BAGd1 M0MINUSBAGkeyMINUSneqM0 ) (max (M3 M0MINUSBAGkeyMINUSneqM0 ) (M4 M0MINUSBAGkeyMINUSneqM0 ) ) ) )
		)
	)
	(or
 		(distinct C2 0 )
		(= N2 N3 )
	)
	(or
 		(= (M0 key ) 0 )
		(and
			(= (M1 d1 ) (M0 d1 ) )
			(= (M1 key ) (M0 key ) )
			(= (M1 bagmaxM3 ) (M0 bagmaxM3 ) )
			(= (M1 bagminM4 ) (M0 bagminM4 ) )
			(= (M1 bagmaxM4 ) (M0 bagmaxM4 ) )
			(= (M1 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) (M0 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) )
			(= (M1 M0UNIONBAGkeyUNIONneqM1 ) (M0 M0UNIONBAGkeyUNIONneqM1 ) )
			(= (M1 M0MINUSBAGkeyMINUSneqM0 ) (M0 M0MINUSBAGkeyMINUSneqM0 ) )
		)
	)
))
(assert (or
 	(>= key d1 )
	(>= d1 bagmaxM4 )
	(distinct N3 1 )
	(distinct (M2 nil ) ((bagunion BAGd1 BAGkey M4 ) nil ) )
	(and
		(distinct C2 0 )
		(distinct N2 (+ N3 1 ) )
	)
	(> 0 C2 )
	(> C2 1 )
	(and
		(= C2 0 )
		(distinct C4 1 )
	)
	(distinct (M1 nil ) ((bagunion M0 BAGkey ) nil ) )
	(distinct C1 1 )
	(distinct (M0 nil ) ((bagminus M0 BAGkey ) nil ) )
	(distinct c3 0 )
	(distinct iseven 1 )
	(and
		(= C2 0 )
		(distinct N2 N3 )
	)
))
(assert (and
	(>= (M3 bagmaxM3 ) 1 )
	(=>
		(> d1 bagmaxM3 )
		(= (M3 d1 ) 0 ))
	(=>
		(> key bagmaxM3 )
		(= (M3 key ) 0 ))
	(=>
		(> bagminM4 bagmaxM3 )
		(= (M3 bagminM4 ) 0 ))
	(=>
		(> bagmaxM4 bagmaxM3 )
		(= (M3 bagmaxM4 ) 0 ))
	(=>
		(> BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 bagmaxM3 )
		(= (M3 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) 0 ))
	(=>
		(> M0UNIONBAGkeyUNIONneqM1 bagmaxM3 )
		(= (M3 M0UNIONBAGkeyUNIONneqM1 ) 0 ))
	(=>
		(> M0MINUSBAGkeyMINUSneqM0 bagmaxM3 )
		(= (M3 M0MINUSBAGkeyMINUSneqM0 ) 0 ))
))
(assert (and
	(>= (M4 bagminM4 ) 1 )
	(=>
		(< d1 bagminM4 )
		(= (M4 d1 ) 0 ))
	(=>
		(< key bagminM4 )
		(= (M4 key ) 0 ))
	(=>
		(< bagmaxM3 bagminM4 )
		(= (M4 bagmaxM3 ) 0 ))
	(=>
		(< bagmaxM4 bagminM4 )
		(= (M4 bagmaxM4 ) 0 ))
	(=>
		(< BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 bagminM4 )
		(= (M4 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) 0 ))
	(=>
		(< M0UNIONBAGkeyUNIONneqM1 bagminM4 )
		(= (M4 M0UNIONBAGkeyUNIONneqM1 ) 0 ))
	(=>
		(< M0MINUSBAGkeyMINUSneqM0 bagminM4 )
		(= (M4 M0MINUSBAGkeyMINUSneqM0 ) 0 ))
))
(assert (and
	(= (BAGd1 d1 ) 1 )
	(=>
		(distinct d1 key )
		(= (BAGd1 key ) 0 ))
	(=>
		(distinct d1 bagmaxM3 )
		(= (BAGd1 bagmaxM3 ) 0 ))
	(=>
		(distinct d1 bagminM4 )
		(= (BAGd1 bagminM4 ) 0 ))
	(=>
		(distinct d1 bagmaxM4 )
		(= (BAGd1 bagmaxM4 ) 0 ))
	(=>
		(distinct d1 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 )
		(= (BAGd1 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) 0 ))
	(=>
		(distinct d1 M0UNIONBAGkeyUNIONneqM1 )
		(= (BAGd1 M0UNIONBAGkeyUNIONneqM1 ) 0 ))
	(=>
		(distinct d1 M0MINUSBAGkeyMINUSneqM0 )
		(= (BAGd1 M0MINUSBAGkeyMINUSneqM0 ) 0 ))
))
(assert (and
	(= (BAGkey key ) 1 )
	(=>
		(distinct key d1 )
		(= (BAGkey d1 ) 0 ))
	(=>
		(distinct key bagmaxM3 )
		(= (BAGkey bagmaxM3 ) 0 ))
	(=>
		(distinct key bagminM4 )
		(= (BAGkey bagminM4 ) 0 ))
	(=>
		(distinct key bagmaxM4 )
		(= (BAGkey bagmaxM4 ) 0 ))
	(=>
		(distinct key BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 )
		(= (BAGkey BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) 0 ))
	(=>
		(distinct key M0UNIONBAGkeyUNIONneqM1 )
		(= (BAGkey M0UNIONBAGkeyUNIONneqM1 ) 0 ))
	(=>
		(distinct key M0MINUSBAGkeyMINUSneqM0 )
		(= (BAGkey M0MINUSBAGkeyMINUSneqM0 ) 0 ))
))
(assert (and
	(>= (M4 bagmaxM4 ) 1 )
	(=>
		(> d1 bagmaxM4 )
		(= (M4 d1 ) 0 ))
	(=>
		(> key bagmaxM4 )
		(= (M4 key ) 0 ))
	(=>
		(> bagmaxM3 bagmaxM4 )
		(= (M4 bagmaxM3 ) 0 ))
	(=>
		(> bagminM4 bagmaxM4 )
		(= (M4 bagminM4 ) 0 ))
	(=>
		(> BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 bagmaxM4 )
		(= (M4 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) 0 ))
	(=>
		(> M0UNIONBAGkeyUNIONneqM1 bagmaxM4 )
		(= (M4 M0UNIONBAGkeyUNIONneqM1 ) 0 ))
	(=>
		(> M0MINUSBAGkeyMINUSneqM0 bagmaxM4 )
		(= (M4 M0MINUSBAGkeyMINUSneqM0 ) 0 ))
))
(assert (and 

(= (emptybag d1 ) 0 )

(>= (M0 d1 ) 0 )

(>= (M1 d1 ) 0 )

(>= (M2 d1 ) 0 )

(>= (M3 d1 ) 0 )

(>= (M4 d1 ) 0 )

(>= (BAGd1 d1 ) 0 )

(>= (BAGkey d1 ) 0 )

(= (emptybag key ) 0 )

(>= (M0 key ) 0 )

(>= (M1 key ) 0 )

(>= (M2 key ) 0 )

(>= (M3 key ) 0 )

(>= (M4 key ) 0 )

(>= (BAGd1 key ) 0 )

(>= (BAGkey key ) 0 )

(= (emptybag bagmaxM3 ) 0 )

(>= (M0 bagmaxM3 ) 0 )

(>= (M1 bagmaxM3 ) 0 )

(>= (M2 bagmaxM3 ) 0 )

(>= (M3 bagmaxM3 ) 0 )

(>= (M4 bagmaxM3 ) 0 )

(>= (BAGd1 bagmaxM3 ) 0 )

(>= (BAGkey bagmaxM3 ) 0 )

(= (emptybag bagminM4 ) 0 )

(>= (M0 bagminM4 ) 0 )

(>= (M1 bagminM4 ) 0 )

(>= (M2 bagminM4 ) 0 )

(>= (M3 bagminM4 ) 0 )

(>= (M4 bagminM4 ) 0 )

(>= (BAGd1 bagminM4 ) 0 )

(>= (BAGkey bagminM4 ) 0 )

(= (emptybag bagmaxM4 ) 0 )

(>= (M0 bagmaxM4 ) 0 )

(>= (M1 bagmaxM4 ) 0 )

(>= (M2 bagmaxM4 ) 0 )

(>= (M3 bagmaxM4 ) 0 )

(>= (M4 bagmaxM4 ) 0 )

(>= (BAGd1 bagmaxM4 ) 0 )

(>= (BAGkey bagmaxM4 ) 0 )

(= (emptybag BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) 0 )

(>= (M0 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) 0 )

(>= (M1 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) 0 )

(>= (M2 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) 0 )

(>= (M3 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) 0 )

(>= (M4 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) 0 )

(>= (BAGd1 BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) 0 )

(>= (BAGkey BAGd1UNIONBAGkeyUNIONM4UNIONneqM2 ) 0 )

(= (emptybag M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (M0 M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (M1 M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (M2 M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (M3 M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (M4 M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (BAGd1 M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (BAGkey M0UNIONBAGkeyUNIONneqM1 ) 0 )

(= (emptybag M0MINUSBAGkeyMINUSneqM0 ) 0 )

(>= (M0 M0MINUSBAGkeyMINUSneqM0 ) 0 )

(>= (M1 M0MINUSBAGkeyMINUSneqM0 ) 0 )

(>= (M2 M0MINUSBAGkeyMINUSneqM0 ) 0 )

(>= (M3 M0MINUSBAGkeyMINUSneqM0 ) 0 )

(>= (M4 M0MINUSBAGkeyMINUSneqM0 ) 0 )

(>= (BAGd1 M0MINUSBAGkeyMINUSneqM0 ) 0 )

(>= (BAGkey M0MINUSBAGkeyMINUSneqM0 ) 0 )

))
(check-sat)