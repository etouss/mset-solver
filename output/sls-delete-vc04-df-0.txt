(set-logic QF_UFLIA)
(define-fun max ((x Int) (y Int)) Int (ite (< x y) y x))
(define-fun min ((x Int) (y Int)) Int (ite (> x y) y x))

(declare-fun M0 (Int) Int)
(declare-fun M1 (Int) Int)
(declare-fun key () Int)
(declare-fun d () Int)
(declare-fun BAGd (Int) Int)
(declare-fun bagminM1 () Int)
(declare-fun BAGkey (Int) Int)
(declare-fun M0MINUSBAGkeyMINUSneqM1 () Int)


(assert (and
	(and
		(= (M0 key ) (max (BAGd key ) (M1 key ) ) )
		(= (M0 d ) (max (BAGd d ) (M1 d ) ) )
		(= (M0 bagminM1 ) (max (BAGd bagminM1 ) (M1 bagminM1 ) ) )
		(= (M0 M0MINUSBAGkeyMINUSneqM1 ) (max (BAGd M0MINUSBAGkeyMINUSneqM1 ) (M1 M0MINUSBAGkeyMINUSneqM1 ) ) )
	)
	(<= d bagminM1 )
	(= key d )
))
(assert (or
 	(= (M0 key ) 0 )
	(distinct (M1 nil ) ((bagminus M0 BAGkey ) nil ) )
))
(assert (and
	(= (BAGd d ) 1 )
	(=>
		(distinct d key )
		(= (BAGd key ) 0 ))
	(=>
		(distinct d bagminM1 )
		(= (BAGd bagminM1 ) 0 ))
	(=>
		(distinct d M0MINUSBAGkeyMINUSneqM1 )
		(= (BAGd M0MINUSBAGkeyMINUSneqM1 ) 0 ))
))
(assert (and
	(>= (M1 bagminM1 ) 1 )
	(=>
		(< key bagminM1 )
		(= (M1 key ) 0 ))
	(=>
		(< d bagminM1 )
		(= (M1 d ) 0 ))
	(=>
		(< M0MINUSBAGkeyMINUSneqM1 bagminM1 )
		(= (M1 M0MINUSBAGkeyMINUSneqM1 ) 0 ))
))
(assert (and
	(= (BAGkey key ) 1 )
	(=>
		(distinct key d )
		(= (BAGkey d ) 0 ))
	(=>
		(distinct key bagminM1 )
		(= (BAGkey bagminM1 ) 0 ))
	(=>
		(distinct key M0MINUSBAGkeyMINUSneqM1 )
		(= (BAGkey M0MINUSBAGkeyMINUSneqM1 ) 0 ))
))
(assert (and 

(>= (M0 key ) 0 )

(>= (M1 key ) 0 )

(>= (BAGd key ) 0 )

(>= (BAGkey key ) 0 )

(>= (M0 d ) 0 )

(>= (M1 d ) 0 )

(>= (BAGd d ) 0 )

(>= (BAGkey d ) 0 )

(>= (M0 bagminM1 ) 0 )

(>= (M1 bagminM1 ) 0 )

(>= (BAGd bagminM1 ) 0 )

(>= (BAGkey bagminM1 ) 0 )

(>= (M0 M0MINUSBAGkeyMINUSneqM1 ) 0 )

(>= (M1 M0MINUSBAGkeyMINUSneqM1 ) 0 )

(>= (BAGd M0MINUSBAGkeyMINUSneqM1 ) 0 )

(>= (BAGkey M0MINUSBAGkeyMINUSneqM1 ) 0 )

))
(check-sat)