(set-logic QF_UFLIA)
(define-fun max ((x Int) (y Int)) Int (ite (< x y) y x))
(define-fun min ((x Int) (y Int)) Int (ite (> x y) y x))

(declare-fun M0 (Int) Int)
(declare-fun M1 (Int) Int)
(declare-fun M2 (Int) Int)
(declare-fun M3 (Int) Int)
(declare-fun M4 (Int) Int)
(declare-fun M5 (Int) Int)
(declare-fun key () Int)
(declare-fun d1 () Int)
(declare-fun d2 () Int)
(declare-fun BAGd2 (Int) Int)
(declare-fun bagminM5 () Int)
(declare-fun bagminM3 () Int)
(declare-fun BAGd1 (Int) Int)
(declare-fun BAGkey (Int) Int)
(declare-fun bagmaxM5 () Int)
(declare-fun M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 () Int)
(declare-fun M0UNIONBAGkeyUNIONneqM1 () Int)
(declare-fun M5UNIONBAGd2UNIONneqM4 () Int)
(declare-fun M0neqM1 () Int)


(assert (and
	(and
		(= (M3 key ) (max (M5 key ) (BAGd2 key ) ) )
		(= (M3 d1 ) (max (M5 d1 ) (BAGd2 d1 ) ) )
		(= (M3 d2 ) (max (M5 d2 ) (BAGd2 d2 ) ) )
		(= (M3 bagminM5 ) (max (M5 bagminM5 ) (BAGd2 bagminM5 ) ) )
		(= (M3 bagminM3 ) (max (M5 bagminM3 ) (BAGd2 bagminM3 ) ) )
		(= (M3 bagmaxM5 ) (max (M5 bagmaxM5 ) (BAGd2 bagmaxM5 ) ) )
		(= (M3 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) (max (M5 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) (BAGd2 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) ) )
		(= (M3 M0UNIONBAGkeyUNIONneqM1 ) (max (M5 M0UNIONBAGkeyUNIONneqM1 ) (BAGd2 M0UNIONBAGkeyUNIONneqM1 ) ) )
		(= (M3 M5UNIONBAGd2UNIONneqM4 ) (max (M5 M5UNIONBAGd2UNIONneqM4 ) (BAGd2 M5UNIONBAGd2UNIONneqM4 ) ) )
		(= (M3 M0neqM1 ) (max (M5 M0neqM1 ) (BAGd2 M0neqM1 ) ) )
	)
	(<= d2 bagminM5 )
	(<= d1 bagminM3 )
	(or
 		(= (M0 key ) 0 )
		(>= (M3 key ) 1 )
	)
	(or
 		(= (M3 key ) 0 )
		(>= (M0 key ) 1 )
	)
	(or
 		(>= (M3 key ) 1 )
		(and
			(= (M2 key ) (max (M3 key ) (max (BAGd1 key ) (BAGkey key ) ) ) )
			(= (M2 d1 ) (max (M3 d1 ) (max (BAGd1 d1 ) (BAGkey d1 ) ) ) )
			(= (M2 d2 ) (max (M3 d2 ) (max (BAGd1 d2 ) (BAGkey d2 ) ) ) )
			(= (M2 bagminM5 ) (max (M3 bagminM5 ) (max (BAGd1 bagminM5 ) (BAGkey bagminM5 ) ) ) )
			(= (M2 bagminM3 ) (max (M3 bagminM3 ) (max (BAGd1 bagminM3 ) (BAGkey bagminM3 ) ) ) )
			(= (M2 bagmaxM5 ) (max (M3 bagmaxM5 ) (max (BAGd1 bagmaxM5 ) (BAGkey bagmaxM5 ) ) ) )
			(= (M2 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) (max (M3 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) (max (BAGd1 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) (BAGkey M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) ) ) )
			(= (M2 M0UNIONBAGkeyUNIONneqM1 ) (max (M3 M0UNIONBAGkeyUNIONneqM1 ) (max (BAGd1 M0UNIONBAGkeyUNIONneqM1 ) (BAGkey M0UNIONBAGkeyUNIONneqM1 ) ) ) )
			(= (M2 M5UNIONBAGd2UNIONneqM4 ) (max (M3 M5UNIONBAGd2UNIONneqM4 ) (max (BAGd1 M5UNIONBAGd2UNIONneqM4 ) (BAGkey M5UNIONBAGd2UNIONneqM4 ) ) ) )
			(= (M2 M0neqM1 ) (max (M3 M0neqM1 ) (max (BAGd1 M0neqM1 ) (BAGkey M0neqM1 ) ) ) )
		)
	)
	(or
 		(>= (M0 key ) 1 )
		(and
			(= (M1 key ) (max (M0 key ) (BAGkey key ) ) )
			(= (M1 d1 ) (max (M0 d1 ) (BAGkey d1 ) ) )
			(= (M1 d2 ) (max (M0 d2 ) (BAGkey d2 ) ) )
			(= (M1 bagminM5 ) (max (M0 bagminM5 ) (BAGkey bagminM5 ) ) )
			(= (M1 bagminM3 ) (max (M0 bagminM3 ) (BAGkey bagminM3 ) ) )
			(= (M1 bagmaxM5 ) (max (M0 bagmaxM5 ) (BAGkey bagmaxM5 ) ) )
			(= (M1 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) (max (M0 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) (BAGkey M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) ) )
			(= (M1 M0UNIONBAGkeyUNIONneqM1 ) (max (M0 M0UNIONBAGkeyUNIONneqM1 ) (BAGkey M0UNIONBAGkeyUNIONneqM1 ) ) )
			(= (M1 M5UNIONBAGd2UNIONneqM4 ) (max (M0 M5UNIONBAGd2UNIONneqM4 ) (BAGkey M5UNIONBAGd2UNIONneqM4 ) ) )
			(= (M1 M0neqM1 ) (max (M0 M0neqM1 ) (BAGkey M0neqM1 ) ) )
		)
	)
	(< d2 key )
	(and
		(= (M2 key ) (max (BAGd1 key ) (M4 key ) ) )
		(= (M2 d1 ) (max (BAGd1 d1 ) (M4 d1 ) ) )
		(= (M2 d2 ) (max (BAGd1 d2 ) (M4 d2 ) ) )
		(= (M2 bagminM5 ) (max (BAGd1 bagminM5 ) (M4 bagminM5 ) ) )
		(= (M2 bagminM3 ) (max (BAGd1 bagminM3 ) (M4 bagminM3 ) ) )
		(= (M2 bagmaxM5 ) (max (BAGd1 bagmaxM5 ) (M4 bagmaxM5 ) ) )
		(= (M2 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) (max (BAGd1 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) (M4 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) ) )
		(= (M2 M0UNIONBAGkeyUNIONneqM1 ) (max (BAGd1 M0UNIONBAGkeyUNIONneqM1 ) (M4 M0UNIONBAGkeyUNIONneqM1 ) ) )
		(= (M2 M5UNIONBAGd2UNIONneqM4 ) (max (BAGd1 M5UNIONBAGd2UNIONneqM4 ) (M4 M5UNIONBAGd2UNIONneqM4 ) ) )
		(= (M2 M0neqM1 ) (max (BAGd1 M0neqM1 ) (M4 M0neqM1 ) ) )
	)
	(or
 		(= (M3 key ) 0 )
		(and
			(= (M2 key ) (max (M3 key ) (BAGd1 key ) ) )
			(= (M2 d1 ) (max (M3 d1 ) (BAGd1 d1 ) ) )
			(= (M2 d2 ) (max (M3 d2 ) (BAGd1 d2 ) ) )
			(= (M2 bagminM5 ) (max (M3 bagminM5 ) (BAGd1 bagminM5 ) ) )
			(= (M2 bagminM3 ) (max (M3 bagminM3 ) (BAGd1 bagminM3 ) ) )
			(= (M2 bagmaxM5 ) (max (M3 bagmaxM5 ) (BAGd1 bagmaxM5 ) ) )
			(= (M2 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) (max (M3 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) (BAGd1 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) ) )
			(= (M2 M0UNIONBAGkeyUNIONneqM1 ) (max (M3 M0UNIONBAGkeyUNIONneqM1 ) (BAGd1 M0UNIONBAGkeyUNIONneqM1 ) ) )
			(= (M2 M5UNIONBAGd2UNIONneqM4 ) (max (M3 M5UNIONBAGd2UNIONneqM4 ) (BAGd1 M5UNIONBAGd2UNIONneqM4 ) ) )
			(= (M2 M0neqM1 ) (max (M3 M0neqM1 ) (BAGd1 M0neqM1 ) ) )
		)
	)
	(or
 		(= (M0 key ) 0 )
		(and
			(= (M1 key ) (M0 key ) )
			(= (M1 d1 ) (M0 d1 ) )
			(= (M1 d2 ) (M0 d2 ) )
			(= (M1 bagminM5 ) (M0 bagminM5 ) )
			(= (M1 bagminM3 ) (M0 bagminM3 ) )
			(= (M1 bagmaxM5 ) (M0 bagmaxM5 ) )
			(= (M1 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) (M0 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) )
			(= (M1 M0UNIONBAGkeyUNIONneqM1 ) (M0 M0UNIONBAGkeyUNIONneqM1 ) )
			(= (M1 M5UNIONBAGd2UNIONneqM4 ) (M0 M5UNIONBAGd2UNIONneqM4 ) )
			(= (M1 M0neqM1 ) (M0 M0neqM1 ) )
		)
	)
))
(assert (or
 	(> d2 bagmaxM5 )
	(and
		(>= (M0 key ) 1 )
		(= (M5 key ) 0 )
	)
	(and
		(>= (M5 key ) 1 )
		(= (M0 key ) 0 )
	)
	(and
		(= (M5 key ) 0 )
		(distinct (M4 nil ) ((bagunion M5 BAGd2 BAGkey ) nil ) )
	)
	(and
		(= (M0 key ) 0 )
		(distinct (M1 nil ) ((bagunion M0 BAGkey ) nil ) )
	)
	(and
		(>= (M5 key ) 1 )
		(distinct (M4 nil ) ((bagunion M5 BAGd2 ) nil ) )
	)
	(and
		(>= (M0 key ) 1 )
		(distinct (M1 M0neqM1 ) (M0 M0neqM1 ) )
	)
))
(assert (and
	(= (BAGd2 d2 ) 1 )
	(=>
		(distinct d2 key )
		(= (BAGd2 key ) 0 ))
	(=>
		(distinct d2 d1 )
		(= (BAGd2 d1 ) 0 ))
	(=>
		(distinct d2 bagminM5 )
		(= (BAGd2 bagminM5 ) 0 ))
	(=>
		(distinct d2 bagminM3 )
		(= (BAGd2 bagminM3 ) 0 ))
	(=>
		(distinct d2 bagmaxM5 )
		(= (BAGd2 bagmaxM5 ) 0 ))
	(=>
		(distinct d2 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 )
		(= (BAGd2 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) 0 ))
	(=>
		(distinct d2 M0UNIONBAGkeyUNIONneqM1 )
		(= (BAGd2 M0UNIONBAGkeyUNIONneqM1 ) 0 ))
	(=>
		(distinct d2 M5UNIONBAGd2UNIONneqM4 )
		(= (BAGd2 M5UNIONBAGd2UNIONneqM4 ) 0 ))
	(=>
		(distinct d2 M0neqM1 )
		(= (BAGd2 M0neqM1 ) 0 ))
))
(assert (and
	(>= (M5 bagminM5 ) 1 )
	(=>
		(< key bagminM5 )
		(= (M5 key ) 0 ))
	(=>
		(< d1 bagminM5 )
		(= (M5 d1 ) 0 ))
	(=>
		(< d2 bagminM5 )
		(= (M5 d2 ) 0 ))
	(=>
		(< bagminM3 bagminM5 )
		(= (M5 bagminM3 ) 0 ))
	(=>
		(< bagmaxM5 bagminM5 )
		(= (M5 bagmaxM5 ) 0 ))
	(=>
		(< M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 bagminM5 )
		(= (M5 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) 0 ))
	(=>
		(< M0UNIONBAGkeyUNIONneqM1 bagminM5 )
		(= (M5 M0UNIONBAGkeyUNIONneqM1 ) 0 ))
	(=>
		(< M5UNIONBAGd2UNIONneqM4 bagminM5 )
		(= (M5 M5UNIONBAGd2UNIONneqM4 ) 0 ))
	(=>
		(< M0neqM1 bagminM5 )
		(= (M5 M0neqM1 ) 0 ))
))
(assert (and
	(>= (M3 bagminM3 ) 1 )
	(=>
		(< key bagminM3 )
		(= (M3 key ) 0 ))
	(=>
		(< d1 bagminM3 )
		(= (M3 d1 ) 0 ))
	(=>
		(< d2 bagminM3 )
		(= (M3 d2 ) 0 ))
	(=>
		(< bagminM5 bagminM3 )
		(= (M3 bagminM5 ) 0 ))
	(=>
		(< bagmaxM5 bagminM3 )
		(= (M3 bagmaxM5 ) 0 ))
	(=>
		(< M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 bagminM3 )
		(= (M3 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) 0 ))
	(=>
		(< M0UNIONBAGkeyUNIONneqM1 bagminM3 )
		(= (M3 M0UNIONBAGkeyUNIONneqM1 ) 0 ))
	(=>
		(< M5UNIONBAGd2UNIONneqM4 bagminM3 )
		(= (M3 M5UNIONBAGd2UNIONneqM4 ) 0 ))
	(=>
		(< M0neqM1 bagminM3 )
		(= (M3 M0neqM1 ) 0 ))
))
(assert (and
	(= (BAGd1 d1 ) 1 )
	(=>
		(distinct d1 key )
		(= (BAGd1 key ) 0 ))
	(=>
		(distinct d1 d2 )
		(= (BAGd1 d2 ) 0 ))
	(=>
		(distinct d1 bagminM5 )
		(= (BAGd1 bagminM5 ) 0 ))
	(=>
		(distinct d1 bagminM3 )
		(= (BAGd1 bagminM3 ) 0 ))
	(=>
		(distinct d1 bagmaxM5 )
		(= (BAGd1 bagmaxM5 ) 0 ))
	(=>
		(distinct d1 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 )
		(= (BAGd1 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) 0 ))
	(=>
		(distinct d1 M0UNIONBAGkeyUNIONneqM1 )
		(= (BAGd1 M0UNIONBAGkeyUNIONneqM1 ) 0 ))
	(=>
		(distinct d1 M5UNIONBAGd2UNIONneqM4 )
		(= (BAGd1 M5UNIONBAGd2UNIONneqM4 ) 0 ))
	(=>
		(distinct d1 M0neqM1 )
		(= (BAGd1 M0neqM1 ) 0 ))
))
(assert (and
	(= (BAGkey key ) 1 )
	(=>
		(distinct key d1 )
		(= (BAGkey d1 ) 0 ))
	(=>
		(distinct key d2 )
		(= (BAGkey d2 ) 0 ))
	(=>
		(distinct key bagminM5 )
		(= (BAGkey bagminM5 ) 0 ))
	(=>
		(distinct key bagminM3 )
		(= (BAGkey bagminM3 ) 0 ))
	(=>
		(distinct key bagmaxM5 )
		(= (BAGkey bagmaxM5 ) 0 ))
	(=>
		(distinct key M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 )
		(= (BAGkey M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) 0 ))
	(=>
		(distinct key M0UNIONBAGkeyUNIONneqM1 )
		(= (BAGkey M0UNIONBAGkeyUNIONneqM1 ) 0 ))
	(=>
		(distinct key M5UNIONBAGd2UNIONneqM4 )
		(= (BAGkey M5UNIONBAGd2UNIONneqM4 ) 0 ))
	(=>
		(distinct key M0neqM1 )
		(= (BAGkey M0neqM1 ) 0 ))
))
(assert (and
	(>= (M5 bagmaxM5 ) 1 )
	(=>
		(> key bagmaxM5 )
		(= (M5 key ) 0 ))
	(=>
		(> d1 bagmaxM5 )
		(= (M5 d1 ) 0 ))
	(=>
		(> d2 bagmaxM5 )
		(= (M5 d2 ) 0 ))
	(=>
		(> bagminM5 bagmaxM5 )
		(= (M5 bagminM5 ) 0 ))
	(=>
		(> bagminM3 bagmaxM5 )
		(= (M5 bagminM3 ) 0 ))
	(=>
		(> M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 bagmaxM5 )
		(= (M5 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) 0 ))
	(=>
		(> M0UNIONBAGkeyUNIONneqM1 bagmaxM5 )
		(= (M5 M0UNIONBAGkeyUNIONneqM1 ) 0 ))
	(=>
		(> M5UNIONBAGd2UNIONneqM4 bagmaxM5 )
		(= (M5 M5UNIONBAGd2UNIONneqM4 ) 0 ))
	(=>
		(> M0neqM1 bagmaxM5 )
		(= (M5 M0neqM1 ) 0 ))
))
(assert (and 

(>= (M0 key ) 0 )

(>= (M1 key ) 0 )

(>= (M2 key ) 0 )

(>= (M3 key ) 0 )

(>= (M4 key ) 0 )

(>= (M5 key ) 0 )

(>= (BAGd2 key ) 0 )

(>= (BAGd1 key ) 0 )

(>= (BAGkey key ) 0 )

(>= (M0 d1 ) 0 )

(>= (M1 d1 ) 0 )

(>= (M2 d1 ) 0 )

(>= (M3 d1 ) 0 )

(>= (M4 d1 ) 0 )

(>= (M5 d1 ) 0 )

(>= (BAGd2 d1 ) 0 )

(>= (BAGd1 d1 ) 0 )

(>= (BAGkey d1 ) 0 )

(>= (M0 d2 ) 0 )

(>= (M1 d2 ) 0 )

(>= (M2 d2 ) 0 )

(>= (M3 d2 ) 0 )

(>= (M4 d2 ) 0 )

(>= (M5 d2 ) 0 )

(>= (BAGd2 d2 ) 0 )

(>= (BAGd1 d2 ) 0 )

(>= (BAGkey d2 ) 0 )

(>= (M0 bagminM5 ) 0 )

(>= (M1 bagminM5 ) 0 )

(>= (M2 bagminM5 ) 0 )

(>= (M3 bagminM5 ) 0 )

(>= (M4 bagminM5 ) 0 )

(>= (M5 bagminM5 ) 0 )

(>= (BAGd2 bagminM5 ) 0 )

(>= (BAGd1 bagminM5 ) 0 )

(>= (BAGkey bagminM5 ) 0 )

(>= (M0 bagminM3 ) 0 )

(>= (M1 bagminM3 ) 0 )

(>= (M2 bagminM3 ) 0 )

(>= (M3 bagminM3 ) 0 )

(>= (M4 bagminM3 ) 0 )

(>= (M5 bagminM3 ) 0 )

(>= (BAGd2 bagminM3 ) 0 )

(>= (BAGd1 bagminM3 ) 0 )

(>= (BAGkey bagminM3 ) 0 )

(>= (M0 bagmaxM5 ) 0 )

(>= (M1 bagmaxM5 ) 0 )

(>= (M2 bagmaxM5 ) 0 )

(>= (M3 bagmaxM5 ) 0 )

(>= (M4 bagmaxM5 ) 0 )

(>= (M5 bagmaxM5 ) 0 )

(>= (BAGd2 bagmaxM5 ) 0 )

(>= (BAGd1 bagmaxM5 ) 0 )

(>= (BAGkey bagmaxM5 ) 0 )

(>= (M0 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) 0 )

(>= (M1 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) 0 )

(>= (M2 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) 0 )

(>= (M3 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) 0 )

(>= (M4 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) 0 )

(>= (M5 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) 0 )

(>= (BAGd2 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) 0 )

(>= (BAGd1 M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) 0 )

(>= (BAGkey M5UNIONBAGd2UNIONBAGkeyUNIONneqM4 ) 0 )

(>= (M0 M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (M1 M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (M2 M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (M3 M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (M4 M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (M5 M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (BAGd2 M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (BAGd1 M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (BAGkey M0UNIONBAGkeyUNIONneqM1 ) 0 )

(>= (M0 M5UNIONBAGd2UNIONneqM4 ) 0 )

(>= (M1 M5UNIONBAGd2UNIONneqM4 ) 0 )

(>= (M2 M5UNIONBAGd2UNIONneqM4 ) 0 )

(>= (M3 M5UNIONBAGd2UNIONneqM4 ) 0 )

(>= (M4 M5UNIONBAGd2UNIONneqM4 ) 0 )

(>= (M5 M5UNIONBAGd2UNIONneqM4 ) 0 )

(>= (BAGd2 M5UNIONBAGd2UNIONneqM4 ) 0 )

(>= (BAGd1 M5UNIONBAGd2UNIONneqM4 ) 0 )

(>= (BAGkey M5UNIONBAGd2UNIONneqM4 ) 0 )

(>= (M0 M0neqM1 ) 0 )

(>= (M1 M0neqM1 ) 0 )

(>= (M2 M0neqM1 ) 0 )

(>= (M3 M0neqM1 ) 0 )

(>= (M4 M0neqM1 ) 0 )

(>= (M5 M0neqM1 ) 0 )

(>= (BAGd2 M0neqM1 ) 0 )

(>= (BAGd1 M0neqM1 ) 0 )

(>= (BAGkey M0neqM1 ) 0 )

))
(check-sat)