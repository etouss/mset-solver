(set-logic QF_SLRDI)
(declare-fun emptybag () BagInt)(declare-fun M0 () BagInt)
(declare-fun M1 () BagInt)
(declare-fun M2 () BagInt)
(declare-fun M3 () BagInt)
(declare-fun M4 () BagInt)
(declare-fun M5 () BagInt)
(declare-fun M6 () BagInt)
(declare-fun M7 () BagInt)
(declare-fun M8 () BagInt)
(declare-fun M9 () BagInt)
(declare-fun M10 () BagInt)
(declare-fun M11 () BagInt)
(declare-fun M12 () BagInt)
(declare-fun M13 () BagInt)
(declare-fun M14 () BagInt)
(declare-fun M15 () BagInt)
(declare-fun M16 () BagInt)
(declare-fun M17 () BagInt)
(declare-fun N1 () Int)
(declare-fun N2 () Int)
(declare-fun N3 () Int)
(declare-fun N4 () Int)
(declare-fun N5 () Int)
(declare-fun N6 () Int)
(declare-fun N7 () Int)
(declare-fun N8 () Int)
(declare-fun N9 () Int)
(declare-fun N10 () Int)
(declare-fun N11 () Int)
(declare-fun N12 () Int)
(declare-fun N13 () Int)
(declare-fun N14 () Int)
(declare-fun N15 () Int)
(declare-fun N16 () Int)
(declare-fun N17 () Int)
(declare-fun n1 () Int)
(declare-fun n2 () Int)
(declare-fun n3 () Int)
(declare-fun n4 () Int)
(declare-fun n5 () Int)
(declare-fun n6 () Int)
(declare-fun n7 () Int)
(declare-fun n8 () Int)
(declare-fun n9 () Int)
(declare-fun n10 () Int)
(declare-fun iseven () Int)
(declare-fun C1 () Int)
(declare-fun C2 () Int)
(declare-fun C3 () Int)
(declare-fun C4 () Int)
(declare-fun C5 () Int)
(declare-fun C6 () Int)
(declare-fun C7 () Int)
(declare-fun C8 () Int)
(declare-fun C9 () Int)
(declare-fun C10 () Int)
(declare-fun C11 () Int)
(declare-fun C12 () Int)
(declare-fun C13 () Int)
(declare-fun C14 () Int)
(declare-fun C15 () Int)
(declare-fun C16 () Int)
(declare-fun C17 () Int)
(declare-fun d1 () Int)
(declare-fun d2 () Int)
(declare-fun d3 () Int)
(declare-fun d4 () Int)
(declare-fun d5 () Int)
(declare-fun d6 () Int)
(declare-fun d7 () Int)
(declare-fun d8 () Int)
(declare-fun d9 () Int)
(declare-fun cz () Int)
(declare-fun c1 () Int)
(declare-fun c2 () Int)
(declare-fun c3 () Int)
(declare-fun c4 () Int)
(declare-fun c5 () Int)
(declare-fun c6 () Int)
(declare-fun c7 () Int)
(declare-fun c8 () Int)
(declare-fun key () Int)
(declare-fun ?M2_51 () BagInt)
(declare-fun ?N2_61 () Int)
(declare-fun ?C2_71 () Int)
(declare-fun ?M32 () BagInt)
(declare-fun ?N32 () Int)
(declare-fun ?C32 () Int)
(declare-fun ?M42 () BagInt)
(declare-fun ?N42 () Int)
(declare-fun ?C42 () Int)
(declare-fun ?d2 () Int)
(declare-fun ?c2 () Int)
(declare-fun ?M33 () BagInt)
(declare-fun ?N33 () Int)
(declare-fun ?C33 () Int)
(declare-fun ?M43 () BagInt)
(declare-fun ?N43 () Int)
(declare-fun ?C43 () Int)
(declare-fun ?d3 () Int)
(declare-fun ?c3 () Int)
(declare-fun ?M34 () BagInt)
(declare-fun ?N34 () Int)
(declare-fun ?C34 () Int)
(declare-fun ?M44 () BagInt)
(declare-fun ?N44 () Int)
(declare-fun ?C44 () Int)
(declare-fun ?d4 () Int)
(declare-fun ?c4 () Int)
(declare-fun ?M2_55 () BagInt)
(declare-fun ?N2_65 () Int)
(declare-fun ?C2_75 () Int)
(declare-fun ?M36 () BagInt)
(declare-fun ?N36 () Int)
(declare-fun ?C36 () Int)
(declare-fun ?M46 () BagInt)
(declare-fun ?N46 () Int)
(declare-fun ?C46 () Int)
(declare-fun ?d6 () Int)
(declare-fun ?c6 () Int)
(assert (and 
 	(< key d7 )
 	(< (bag d7 ) M11 )
 	(= N11 1 )
 	(<= 0 c7 )
 	(<= c7 1 )
 	(=> (= c7 0 )(= C11 1 ))
 	(< (bagunion (bag key ) (bag d7 ) M11 ) (bag d6 ) )
 	(< (bag d6 ) M10 )
 	(= N10 (ite (= c7 0 ) N11 (+ N11 1 ) ) )
 	(<= 0 c6 )
 	(<= c6 1 )
 	(=> (= c6 0 )(= c7 1 ))
 	(=> (= c6 0 )(= C10 1 ))
 	(< (bagunion (bag key ) (bag d7 ) M11 (bag d6 ) M10 ) (bag d5 ) )
 	(< (bag d5 ) M9 )
 	(= N9 (ite (= c6 0 ) N10 (+ N10 1 ) ) )
 	(<= 0 c5 )
 	(<= c5 1 )
 	(=> (= c5 0 )(= c6 1 ))
 	(=> (= c5 0 )(= C9 1 ))
 	(< (bagunion (bag key ) (bag d7 ) M11 (bag d6 ) M10 (bag d5 ) M9 ) (bag d4 ) )
 	(< (bag d4 ) M8 )
 	(= N8 (ite (= c5 0 ) N9 (+ N9 1 ) ) )
 	(<= 0 c4 )
 	(<= c4 1 )
 	(=> (= c4 0 )(= c5 1 ))
 	(=> (= c4 0 )(= C8 1 ))
 	(= M7 (bagunion (bag key ) (bag d7 ) M11 (bag d6 ) M10 (bag d5 ) M9 (bag d4 ) M8 ) )
 	(= N7 (ite (= c4 0 ) N8 (+ N8 1 ) ) )
 	(< M6 (bag d3 ) )
 	(< (bag d3 ) M5 )
 	(<= 0 c3 )
 	(<= c3 1 )
 	(=> (= c3 0 )(= C6 1 ))
 	(=> (= c3 0 )(= C5 1 ))
 	(< (bagunion M6 (bag d3 ) M5 ) (bag d2 ) )
 	(< (bag d2 ) M4 )
 	(= N4 (ite (= c3 0 ) N5 (+ N5 1 ) ) )
 	(<= 0 c2 )
 	(<= c2 1 )
 	(=> (= c2 0 )(= c3 1 ))
 	(=> (= c2 0 )(= C4 1 ))
 	(< (bagunion M6 (bag d3 ) M5 (bag d2 ) M4 ) (bag d1 ) )
 	(< (bag d1 ) M3 )
 	(= N3 (ite (= c2 0 ) N4 (+ N4 1 ) ) )
 	(<= 0 c1 )
 	(<= c1 1 )
 	(=> (= c1 0 )(= c2 1 ))
 	(=> (= c2 1 )(= C3 1 ))
 	(= M2 (bagunion M6 (bag d3 ) M5 (bag d2 ) M4 (bag d1 ) M3 ) )
 	(= N2 (ite (= c1 0 ) N3 (+ N3 1 ) ) )
 	(= M1 (bagunion M0 (bag key ) ) )
 	(= M0 (bagminus M0 (bag key ) ) )
 	(= iseven 0 )
 	(= c5 1 )
 	(= C8 0 )
 	(>= (+ c7 C10 ) 1 )
 	(= c8 0 )
 	(= N5 N6 )
 	(= C2 c1 )
 	(= C7 c4 )
 )
 ) 
 (assert (not 
(and 
 	(= M7 (bagunion M12 (bag d4 ) M8 ) )
 	(< M12 (bag d4 ) )
 	(< (bag d4 ) M8 )
 	(= N7 (ite (= C7 0 ) N12 (+ N12 1 ) ) )
 	(= C7 0 )
 	(= c5 1 )
 	(= C8 1 )
 	(= N12 N8 )
 	(= C7 C7 )
 	(= ?M33 (bagunion M6 (bag d3 ) M5 ) )
 	(< M6 (bag d3 ) )
 	(< (bag d3 ) M5 )
 	(= N4 (ite (= c3 0 ) N5 (+ N5 1 ) ) )
 	(= c3 0 )
 	(= C6 1 )
 	(= C5 1 )
 	(= N5 N5 )
 	(= ?M32 (bagunion ?M33 (bag d2 ) M4 ) )
 	(< ?M33 (bag d2 ) )
 	(< (bag d2 ) M4 )
 	(= N3 (ite (= c2 0 ) N4 (+ N4 1 ) ) )
 	(= c2 0 )
 	(= c3 1 )
 	(= C4 1 )
 	(= M2 (bagunion ?M32 (bag d1 ) M3 ) )
 	(< ?M32 (bag d1 ) )
 	(< (bag d1 ) M3 )
 	(= N2 (ite (= C2 0 ) N3 (+ N3 1 ) ) )
 	(= C2 0 )
 	(= c2 1 )
 	(= C3 1 )
 	(= C2 C2 )
 	(< key d7 )
 	(< (bag d7 ) M11 )
 	(= N11 1 )
 	(<= 0 c7 )
 	(<= c7 1 )
 	(=> (= c7 0 )(= C11 1 ))
 	(< (bagunion (bag key ) (bag d7 ) M11 ) (bag d6 ) )
 	(< (bag d6 ) M10 )
 	(= N10 (ite (= c7 0 ) N11 (+ N11 1 ) ) )
 	(<= 0 c6 )
 	(<= c6 1 )
 	(=> (= c6 0 )(= c7 1 ))
 	(=> (= c6 0 )(= C10 1 ))
 	(< (bagunion (bag key ) (bag d7 ) M11 (bag d6 ) M10 ) (bag d5 ) )
 	(< (bag d5 ) M9 )
 	(= N9 (ite (= c6 0 ) N10 (+ N10 1 ) ) )
 	(<= 0 c5 )
 	(<= c5 1 )
 	(=> (= c5 0 )(= c6 1 ))
 	(=> (= c5 0 )(= C9 1 ))
 	(= M12 (bagunion (bag key ) (bag d7 ) M11 (bag d6 ) M10 (bag d5 ) M9 ) )
 	(= N12 (ite (= c5 0 ) N9 (+ N9 1 ) ) )
 	(= M1 (bagunion M0 (bag key ) ) )
 	(= M0 (bagminus M0 (bag key ) ) )
 	(= iseven 1 )
 	(>= (+ c7 C10 ) 1 )
 	(= c8 0 )
 	(= C12 c5 )
 )
 ) 
)
(check-sat)
