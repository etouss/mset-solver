(set-logic QF_SLRDI)
(declare-fun emptybag () BagInt)(declare-fun M0 () BagInt)
(declare-fun M1 () BagInt)
(declare-fun M2 () BagInt)
(declare-fun M3 () BagInt)
(declare-fun M4 () BagInt)
(declare-fun key () Int)
(declare-fun d1 () Int)
(declare-fun ?M2_41 () BagInt)
(declare-fun ?M12 () BagInt)
(declare-fun ?M22 () BagInt)
(declare-fun ?d2 () Int)
(declare-fun ?M13 () BagInt)
(declare-fun ?M23 () BagInt)
(declare-fun ?d3 () Int)
(assert (and 
 	(= M3 emptybag )
 	(= M4 emptybag )
 	(< M3 (bag d1 ) )
 	(< (bag d1 ) M4 )
 	(= M1 (ite (subset (bag key ) M0 ) M0 (bagunion M0 (bag key ) ) ) )
 	(= M2 (ite (subset (bag key ) M4 ) (bagunion (bag d1 ) M3 M4 ) (bagunion (bag d1 ) M3 M4 (bag key ) ) ) )
 	(=> (subset (bag key ) M0 )(subset (bag key ) M4 ))
 	(=> (subset (bag key ) M4 )(subset (bag key ) M0 ))
 	(< d1 key )
 )
 ) 
 (assert (not 
(and 
 	(= ?M12 emptybag )
 	(= ?M13 emptybag )
 	(= ?M23 emptybag )
 	(= ?M22 (bagunion (bag key ) ?M13 ?M23 ) )
 	(< ?M13 (bag key ) )
 	(< (bag key ) ?M23 )
 	(= M2 (bagunion (bag d1 ) ?M12 ?M22 ) )
 	(< ?M12 (bag d1 ) )
 	(< (bag d1 ) ?M22 )
 	(= M0 (bagminus M0 (bag key ) ) )
 	(= M1 (bagunion M0 (bag key ) ) )
 )
 ) 
)
(check-sat)
